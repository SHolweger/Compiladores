
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGUAL_IGUALDIFERENTEleftMAYORMENORMAYOR_IGUALMENOR_IGUALleftSUMARESTAleftMULTDIVMODrightNEGACIONAND BOOLEANO BREAK CADENA CAMBIAR CASO COMA CONTINUE CORCHETEDER CORCHETEIZQ DECIMAL DIFERENTE DIV DIV_IGUAL DOSPUNTOS FALSO FUNCION HASTA IDENTIFICADOR IGUAL IGUAL_IGUAL INICIO LLAVEDER LLAVEIZQ MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENU MIENTRAS MOD MOSTRAR MULT MULT_IGUAL NEGACION NUMERO OR PARA PARENDER PARENIZQ PREDETERMINADO PUNTO PUNTOYCOMA REGRESA REPETIR RESTA RESTA_IGUAL SI SINO SUMA SUMA_IGUAL VERDADEROprograma : lista_funcioneslista_funciones : funcion\n| funcion lista_funcionesfuncion : INICIO PARENIZQ PARENDER LLAVEIZQ sentencias LLAVEDER\n| FUNCION IDENTIFICADOR PARENIZQ params PARENDER abrir_ambito bloque cerrar_ambitosentencias : sentencia\n| sentencia sentenciassentencia : NUMERO IDENTIFICADOR IGUAL expresion PUNTOYCOMA\n| DECIMAL IDENTIFICADOR IGUAL expresion PUNTOYCOMA\n| BOOLEANO IDENTIFICADOR IGUAL expresion PUNTOYCOMA\n| CADENA IDENTIFICADOR IGUAL expresion PUNTOYCOMAsentencia : IDENTIFICADOR OP_ASIG expresion PUNTOYCOMAOP_ASIG : IGUAL\n| SUMA_IGUAL\n| RESTA_IGUAL\n| MULT_IGUAL\n| DIV_IGUALsentencia : REGRESA expresion PUNTOYCOMAsentencia : SI PARENIZQ condicion PARENDER abrir_ambito bloque cerrar_ambito\n| SI PARENIZQ condicion PARENDER abrir_ambito bloque cerrar_ambito SINO abrir_ambito bloque cerrar_ambitosentencia : MIENTRAS PARENIZQ condicion PARENDER abrir_ambito bloque cerrar_ambitosentencia : REPETIR abrir_ambito bloque cerrar_ambito HASTA PARENIZQ condicion PARENDER PUNTOYCOMAsentencia : REPETIR sentencias HASTA PARENIZQ condicion PARENDER PUNTOYCOMAfor_init : NUMERO IDENTIFICADOR IGUAL expresion\n| DECIMAL IDENTIFICADOR IGUAL expresion\n| BOOLEANO IDENTIFICADOR IGUAL expresion\n| CADENA IDENTIFICADOR IGUAL expresion\n| IDENTIFICADOR OP_ASIG expresion\n| emptyfor_update : IDENTIFICADOR OP_ASIG expresion\n| emptyempty :sentencia : PARA PARENIZQ for_init PUNTOYCOMA condicion PUNTOYCOMA for_update PARENDER abrir_ambito bloque cerrar_ambitosentencia : expresion PUNTOYCOMAexpresion : expresion SUMA expresion\n| expresion RESTA expresion\n| expresion MULT expresion\n| expresion DIV expresion\n| expresion MOD expresion\n| PARENIZQ expresion PARENDER\n| NUMERO\n| DECIMAL\n| CADENA\n| IDENTIFICADORcomparador : MENOR\n| MAYOR\n| MENOR_IGUAL\n| MAYOR_IGUAL\n| IGUAL_IGUAL\n| DIFERENTEcondicion : expresion comparador expresion\n| expresionsentencia : MENU LLAVEIZQ opciones LLAVEDERopciones : opcion\n| opciones opcionopcion : NUMERO DOSPUNTOS llamada_accion PUNTOYCOMAllamada_accion : MOSTRAR PARENIZQ expresion PARENDER PUNTOYCOMA\n| IDENTIFICADOR PARENIZQ args PARENDER PUNTOYCOMAsentencia : MOSTRAR PARENIZQ expresion PARENDER PUNTOYCOMAsentencia : CAMBIAR PARENIZQ expresion PARENDER LLAVEIZQ casos LLAVEDERcasos : caso\n| caso casoscaso : CASO expresion DOSPUNTOS abrir_ambito sentencias cerrar_ambito\n| PREDETERMINADO DOSPUNTOS abrir_ambito sentencias cerrar_ambitoabrir_ambito :cerrar_ambito :bloque : LLAVEIZQ abrir_ambito sentencias cerrar_ambito LLAVEDERsentencia : FUNCION IDENTIFICADOR PARENIZQ params PARENDER abrir_ambito bloque cerrar_ambitoparams :\n| lista_paramslista_params : tipo IDENTIFICADOR\n| IDENTIFICADOR\n| tipo IDENTIFICADOR COMA lista_params\n| IDENTIFICADOR COMA lista_paramstipo : NUMERO\n| DECIMAL\n| BOOLEANO\n| CADENAsentencia : IDENTIFICADOR PARENIZQ args PARENDER PUNTOYCOMAargs : \n| lista_argslista_args : expresion\n| expresion COMA lista_argssentencia : BREAK PUNTOYCOMAsentencia : CONTINUE PUNTOYCOMAexpresion : expresion AND expresion\n| expresion OR expresion\n| NEGACION expresionexpresion : VERDADERO\n| FALSO'
    
_lr_action_items = {'INICIO':([0,3,51,124,157,203,],[4,4,-4,-66,-5,-67,]),'FUNCION':([0,3,11,22,32,51,61,82,83,104,109,124,127,143,151,157,158,159,161,162,163,179,182,183,200,201,203,204,210,213,214,221,222,223,225,230,232,233,236,237,],[5,5,37,37,37,-4,-34,-84,-85,-18,-65,-66,-12,37,-53,-5,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-65,-66,-65,37,-68,-22,37,-66,-66,-20,-33,]),'$end':([1,2,3,6,51,124,157,203,],[0,-1,-2,-3,-4,-66,-5,-67,]),'PARENIZQ':([4,8,11,20,22,24,29,30,31,32,33,35,36,40,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,79,80,81,82,83,89,101,102,103,104,109,110,127,129,134,135,136,137,138,139,140,143,144,145,147,151,158,159,161,162,163,167,171,173,174,175,177,178,179,182,183,184,193,194,197,200,201,203,204,210,213,214,218,221,222,223,225,230,232,233,236,237,],[7,10,20,20,20,55,20,73,74,20,77,79,80,20,20,20,-13,-14,-15,-16,-17,-34,20,20,20,20,20,20,20,20,20,20,20,123,-84,-85,20,20,20,20,-18,-65,144,-12,20,20,-45,-46,-47,-48,-49,-50,20,20,20,20,-53,-8,-79,-9,-10,-11,184,20,20,20,20,193,194,-59,-66,-66,20,20,20,20,-19,-21,-67,-23,-60,-65,-66,20,-65,20,-68,-22,20,-66,-66,-20,-33,]),'IDENTIFICADOR':([5,10,11,15,16,17,18,19,20,22,23,26,27,28,29,32,37,40,43,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,77,79,80,82,83,87,89,101,102,103,104,109,112,114,115,116,123,127,129,134,135,136,137,138,139,140,143,144,145,147,151,153,158,159,161,162,163,171,173,174,175,179,182,183,184,187,193,194,197,200,201,203,204,210,213,214,218,221,222,223,225,230,232,233,236,237,],[8,12,24,45,-75,-76,-77,-78,50,24,53,69,70,71,50,24,81,50,12,50,50,-13,-14,-15,-16,-17,-34,50,50,50,50,50,50,50,50,50,113,50,50,-84,-85,12,50,50,50,50,-18,-65,146,148,149,150,12,-12,50,50,-45,-46,-47,-48,-49,-50,24,50,50,50,-53,178,-8,-79,-9,-10,-11,50,50,50,50,-59,-66,-66,50,206,50,50,50,-19,-21,-67,-23,-60,-65,-66,50,-65,24,-68,-22,24,-66,-66,-20,-33,]),'PARENDER':([7,10,12,13,14,41,42,45,46,47,48,49,50,55,84,85,88,91,92,93,94,95,96,97,98,99,100,105,106,107,121,122,123,125,156,160,165,169,187,194,202,205,207,208,209,227,],[9,-69,-72,44,-70,-89,-90,-71,88,-41,-42,-43,-44,-80,-88,-74,-40,128,-81,-82,-35,-36,-37,-38,-39,-86,-87,133,-52,141,154,155,-69,-73,181,-83,-51,186,-32,-80,216,217,-31,219,220,-30,]),'LLAVEIZQ':([9,32,34,44,75,86,133,141,155,164,166,181,199,215,217,224,226,],[11,-65,78,-65,109,109,-65,-65,180,109,109,-65,109,-65,-65,109,109,]),'NUMERO':([10,11,20,22,29,32,40,43,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,77,78,79,80,82,83,87,89,101,102,103,104,109,118,119,123,127,129,134,135,136,137,138,139,140,143,144,145,147,151,152,158,159,161,162,163,171,173,174,175,179,182,183,184,192,193,194,197,200,201,203,204,210,213,214,218,221,222,223,225,230,232,233,236,237,],[16,23,47,23,47,23,47,16,47,47,-13,-14,-15,-16,-17,-34,47,47,47,47,47,47,47,47,47,112,120,47,47,-84,-85,16,47,47,47,47,-18,-65,120,-54,16,-12,47,47,-45,-46,-47,-48,-49,-50,23,47,47,47,-53,-55,-8,-79,-9,-10,-11,47,47,47,47,-59,-66,-66,47,-56,47,47,47,-19,-21,-67,-23,-60,-65,-66,47,-65,23,-68,-22,23,-66,-66,-20,-33,]),'DECIMAL':([10,11,20,22,29,32,40,43,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,77,79,80,82,83,87,89,101,102,103,104,109,123,127,129,134,135,136,137,138,139,140,143,144,145,147,151,158,159,161,162,163,171,173,174,175,179,182,183,184,193,194,197,200,201,203,204,210,213,214,218,221,222,223,225,230,232,233,236,237,],[17,26,48,26,48,26,48,17,48,48,-13,-14,-15,-16,-17,-34,48,48,48,48,48,48,48,48,48,114,48,48,-84,-85,17,48,48,48,48,-18,-65,17,-12,48,48,-45,-46,-47,-48,-49,-50,26,48,48,48,-53,-8,-79,-9,-10,-11,48,48,48,48,-59,-66,-66,48,48,48,48,-19,-21,-67,-23,-60,-65,-66,48,-65,26,-68,-22,26,-66,-66,-20,-33,]),'BOOLEANO':([10,11,22,32,43,61,77,82,83,87,104,109,123,127,143,151,158,159,161,162,163,179,182,183,200,201,203,204,210,213,214,221,222,223,225,230,232,233,236,237,],[18,27,27,27,18,-34,115,-84,-85,18,-18,-65,18,-12,27,-53,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-65,-66,-65,27,-68,-22,27,-66,-66,-20,-33,]),'CADENA':([10,11,20,22,29,32,40,43,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,77,79,80,82,83,87,89,101,102,103,104,109,123,127,129,134,135,136,137,138,139,140,143,144,145,147,151,158,159,161,162,163,171,173,174,175,179,182,183,184,193,194,197,200,201,203,204,210,213,214,218,221,222,223,225,230,232,233,236,237,],[19,28,49,28,49,28,49,19,49,49,-13,-14,-15,-16,-17,-34,49,49,49,49,49,49,49,49,49,116,49,49,-84,-85,19,49,49,49,49,-18,-65,19,-12,49,49,-45,-46,-47,-48,-49,-50,28,49,49,49,-53,-8,-79,-9,-10,-11,49,49,49,49,-59,-66,-66,49,49,49,49,-19,-21,-67,-23,-60,-65,-66,49,-65,28,-68,-22,28,-66,-66,-20,-33,]),'REGRESA':([11,22,32,61,82,83,104,109,127,143,151,158,159,161,162,163,179,182,183,200,201,203,204,210,213,214,221,222,223,225,230,232,233,236,237,],[29,29,29,-34,-84,-85,-18,-65,-12,29,-53,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-65,-66,-65,29,-68,-22,29,-66,-66,-20,-33,]),'SI':([11,22,32,61,82,83,104,109,127,143,151,158,159,161,162,163,179,182,183,200,201,203,204,210,213,214,221,222,223,225,230,232,233,236,237,],[30,30,30,-34,-84,-85,-18,-65,-12,30,-53,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-65,-66,-65,30,-68,-22,30,-66,-66,-20,-33,]),'MIENTRAS':([11,22,32,61,82,83,104,109,127,143,151,158,159,161,162,163,179,182,183,200,201,203,204,210,213,214,221,222,223,225,230,232,233,236,237,],[31,31,31,-34,-84,-85,-18,-65,-12,31,-53,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-65,-66,-65,31,-68,-22,31,-66,-66,-20,-33,]),'REPETIR':([11,22,32,61,82,83,104,109,127,143,151,158,159,161,162,163,179,182,183,200,201,203,204,210,213,214,221,222,223,225,230,232,233,236,237,],[32,32,32,-34,-84,-85,-18,-65,-12,32,-53,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-65,-66,-65,32,-68,-22,32,-66,-66,-20,-33,]),'PARA':([11,22,32,61,82,83,104,109,127,143,151,158,159,161,162,163,179,182,183,200,201,203,204,210,213,214,221,222,223,225,230,232,233,236,237,],[33,33,33,-34,-84,-85,-18,-65,-12,33,-53,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-65,-66,-65,33,-68,-22,33,-66,-66,-20,-33,]),'MENU':([11,22,32,61,82,83,104,109,127,143,151,158,159,161,162,163,179,182,183,200,201,203,204,210,213,214,221,222,223,225,230,232,233,236,237,],[34,34,34,-34,-84,-85,-18,-65,-12,34,-53,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-65,-66,-65,34,-68,-22,34,-66,-66,-20,-33,]),'MOSTRAR':([11,22,32,61,82,83,104,109,127,143,151,153,158,159,161,162,163,179,182,183,200,201,203,204,210,213,214,221,222,223,225,230,232,233,236,237,],[35,35,35,-34,-84,-85,-18,-65,-12,35,-53,177,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-65,-66,-65,35,-68,-22,35,-66,-66,-20,-33,]),'CAMBIAR':([11,22,32,61,82,83,104,109,127,143,151,158,159,161,162,163,179,182,183,200,201,203,204,210,213,214,221,222,223,225,230,232,233,236,237,],[36,36,36,-34,-84,-85,-18,-65,-12,36,-53,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-65,-66,-65,36,-68,-22,36,-66,-66,-20,-33,]),'BREAK':([11,22,32,61,82,83,104,109,127,143,151,158,159,161,162,163,179,182,183,200,201,203,204,210,213,214,221,222,223,225,230,232,233,236,237,],[38,38,38,-34,-84,-85,-18,-65,-12,38,-53,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-65,-66,-65,38,-68,-22,38,-66,-66,-20,-33,]),'CONTINUE':([11,22,32,61,82,83,104,109,127,143,151,158,159,161,162,163,179,182,183,200,201,203,204,210,213,214,221,222,223,225,230,232,233,236,237,],[39,39,39,-34,-84,-85,-18,-65,-12,39,-53,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-65,-66,-65,39,-68,-22,39,-66,-66,-20,-33,]),'NEGACION':([11,20,22,29,32,40,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,79,80,82,83,89,101,102,103,104,109,127,129,134,135,136,137,138,139,140,143,144,145,147,151,158,159,161,162,163,171,173,174,175,179,182,183,184,193,194,197,200,201,203,204,210,213,214,218,221,222,223,225,230,232,233,236,237,],[40,40,40,40,40,40,40,40,-13,-14,-15,-16,-17,-34,40,40,40,40,40,40,40,40,40,40,40,-84,-85,40,40,40,40,-18,-65,-12,40,40,-45,-46,-47,-48,-49,-50,40,40,40,40,-53,-8,-79,-9,-10,-11,40,40,40,40,-59,-66,-66,40,40,40,40,-19,-21,-67,-23,-60,-65,-66,40,-65,40,-68,-22,40,-66,-66,-20,-33,]),'VERDADERO':([11,20,22,29,32,40,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,79,80,82,83,89,101,102,103,104,109,127,129,134,135,136,137,138,139,140,143,144,145,147,151,158,159,161,162,163,171,173,174,175,179,182,183,184,193,194,197,200,201,203,204,210,213,214,218,221,222,223,225,230,232,233,236,237,],[41,41,41,41,41,41,41,41,-13,-14,-15,-16,-17,-34,41,41,41,41,41,41,41,41,41,41,41,-84,-85,41,41,41,41,-18,-65,-12,41,41,-45,-46,-47,-48,-49,-50,41,41,41,41,-53,-8,-79,-9,-10,-11,41,41,41,41,-59,-66,-66,41,41,41,41,-19,-21,-67,-23,-60,-65,-66,41,-65,41,-68,-22,41,-66,-66,-20,-33,]),'FALSO':([11,20,22,29,32,40,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,79,80,82,83,89,101,102,103,104,109,127,129,134,135,136,137,138,139,140,143,144,145,147,151,158,159,161,162,163,171,173,174,175,179,182,183,184,193,194,197,200,201,203,204,210,213,214,218,221,222,223,225,230,232,233,236,237,],[42,42,42,42,42,42,42,42,-13,-14,-15,-16,-17,-34,42,42,42,42,42,42,42,42,42,42,42,-84,-85,42,42,42,42,-18,-65,-12,42,42,-45,-46,-47,-48,-49,-50,42,42,42,42,-53,-8,-79,-9,-10,-11,42,42,42,42,-59,-66,-66,42,42,42,42,-19,-21,-67,-23,-60,-65,-66,42,-65,42,-68,-22,42,-66,-66,-20,-33,]),'COMA':([12,41,42,45,47,48,49,50,84,88,93,94,95,96,97,98,99,100,],[43,-89,-90,87,-41,-42,-43,-44,-88,-40,129,-35,-36,-37,-38,-39,-86,-87,]),'LLAVEDER':([21,22,52,61,82,83,104,118,119,127,151,152,158,159,161,162,163,168,179,182,183,185,192,195,196,200,201,203,204,210,211,214,223,225,231,232,233,234,235,236,237,238,],[51,-6,-7,-34,-84,-85,-18,151,-54,-12,-53,-55,-8,-79,-9,-10,-11,-66,-59,-66,-66,203,-56,210,-61,-19,-21,-67,-23,-60,-62,-66,-68,-22,-66,-66,-66,-66,-64,-20,-33,-63,]),'HASTA':([22,52,61,76,82,83,104,108,127,142,151,158,159,161,162,163,179,182,183,200,201,203,204,210,214,223,225,232,233,236,237,],[-6,-7,-34,110,-84,-85,-18,-66,-12,167,-53,-8,-79,-9,-10,-11,-59,-66,-66,-19,-21,-67,-23,-60,-66,-68,-22,-66,-66,-20,-33,]),'CASO':([22,52,61,82,83,104,127,151,158,159,161,162,163,179,180,182,183,196,200,201,203,204,210,214,223,225,231,232,233,234,235,236,237,238,],[-6,-7,-34,-84,-85,-18,-12,-53,-8,-79,-9,-10,-11,-59,197,-66,-66,197,-19,-21,-67,-23,-60,-66,-68,-22,-66,-66,-66,-66,-64,-20,-33,-63,]),'PREDETERMINADO':([22,52,61,82,83,104,127,151,158,159,161,162,163,179,180,182,183,196,200,201,203,204,210,214,223,225,231,232,233,234,235,236,237,238,],[-6,-7,-34,-84,-85,-18,-12,-53,-8,-79,-9,-10,-11,-59,198,-66,-66,198,-19,-21,-67,-23,-60,-66,-68,-22,-66,-66,-66,-66,-64,-20,-33,-63,]),'PUNTOYCOMA':([23,24,25,26,28,38,39,41,42,47,48,49,50,72,77,84,88,90,94,95,96,97,98,99,100,106,111,117,126,128,130,131,132,154,165,170,172,176,186,188,189,190,191,216,219,220,228,229,],[-41,-44,61,-42,-43,82,83,-89,-90,-41,-42,-43,-44,104,-32,-88,-40,127,-35,-36,-37,-38,-39,-86,-87,-52,145,-29,158,159,161,162,163,179,-51,187,-28,192,204,-24,-25,-26,-27,225,228,229,-57,-58,]),'SUMA':([23,24,25,26,28,41,42,46,47,48,49,50,72,84,88,90,93,94,95,96,97,98,99,100,106,121,122,126,130,131,132,165,172,188,189,190,191,208,212,227,],[-41,-44,62,-42,-43,-89,-90,62,-41,-42,-43,-44,62,-88,-40,62,62,-35,-36,-37,-38,-39,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'RESTA':([23,24,25,26,28,41,42,46,47,48,49,50,72,84,88,90,93,94,95,96,97,98,99,100,106,121,122,126,130,131,132,165,172,188,189,190,191,208,212,227,],[-41,-44,63,-42,-43,-89,-90,63,-41,-42,-43,-44,63,-88,-40,63,63,-35,-36,-37,-38,-39,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'MULT':([23,24,25,26,28,41,42,46,47,48,49,50,72,84,88,90,93,94,95,96,97,98,99,100,106,121,122,126,130,131,132,165,172,188,189,190,191,208,212,227,],[-41,-44,64,-42,-43,-89,-90,64,-41,-42,-43,-44,64,-88,-40,64,64,64,64,-37,-38,-39,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'DIV':([23,24,25,26,28,41,42,46,47,48,49,50,72,84,88,90,93,94,95,96,97,98,99,100,106,121,122,126,130,131,132,165,172,188,189,190,191,208,212,227,],[-41,-44,65,-42,-43,-89,-90,65,-41,-42,-43,-44,65,-88,-40,65,65,65,65,-37,-38,-39,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'MOD':([23,24,25,26,28,41,42,46,47,48,49,50,72,84,88,90,93,94,95,96,97,98,99,100,106,121,122,126,130,131,132,165,172,188,189,190,191,208,212,227,],[-41,-44,66,-42,-43,-89,-90,66,-41,-42,-43,-44,66,-88,-40,66,66,66,66,-37,-38,-39,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'AND':([23,24,25,26,28,41,42,46,47,48,49,50,72,84,88,90,93,94,95,96,97,98,99,100,106,121,122,126,130,131,132,165,172,188,189,190,191,208,212,227,],[-41,-44,67,-42,-43,-89,-90,67,-41,-42,-43,-44,67,-88,-40,67,67,-35,-36,-37,-38,-39,-86,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'OR':([23,24,25,26,28,41,42,46,47,48,49,50,72,84,88,90,93,94,95,96,97,98,99,100,106,121,122,126,130,131,132,165,172,188,189,190,191,208,212,227,],[-41,-44,68,-42,-43,-89,-90,68,-41,-42,-43,-44,68,-88,-40,68,68,-35,-36,-37,-38,-39,-86,-87,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'IGUAL':([24,53,69,70,71,113,146,148,149,150,206,],[56,89,101,102,103,56,171,173,174,175,56,]),'SUMA_IGUAL':([24,113,206,],[57,57,57,]),'RESTA_IGUAL':([24,113,206,],[58,58,58,]),'MULT_IGUAL':([24,113,206,],[59,59,59,]),'DIV_IGUAL':([24,113,206,],[60,60,60,]),'MENOR':([41,42,47,48,49,50,84,88,94,95,96,97,98,99,100,106,],[-89,-90,-41,-42,-43,-44,-88,-40,-35,-36,-37,-38,-39,-86,-87,135,]),'MAYOR':([41,42,47,48,49,50,84,88,94,95,96,97,98,99,100,106,],[-89,-90,-41,-42,-43,-44,-88,-40,-35,-36,-37,-38,-39,-86,-87,136,]),'MENOR_IGUAL':([41,42,47,48,49,50,84,88,94,95,96,97,98,99,100,106,],[-89,-90,-41,-42,-43,-44,-88,-40,-35,-36,-37,-38,-39,-86,-87,137,]),'MAYOR_IGUAL':([41,42,47,48,49,50,84,88,94,95,96,97,98,99,100,106,],[-89,-90,-41,-42,-43,-44,-88,-40,-35,-36,-37,-38,-39,-86,-87,138,]),'IGUAL_IGUAL':([41,42,47,48,49,50,84,88,94,95,96,97,98,99,100,106,],[-89,-90,-41,-42,-43,-44,-88,-40,-35,-36,-37,-38,-39,-86,-87,139,]),'DIFERENTE':([41,42,47,48,49,50,84,88,94,95,96,97,98,99,100,106,],[-89,-90,-41,-42,-43,-44,-88,-40,-35,-36,-37,-38,-39,-86,-87,140,]),'DOSPUNTOS':([41,42,47,48,49,50,84,88,94,95,96,97,98,99,100,120,198,212,],[-89,-90,-41,-42,-43,-44,-88,-40,-35,-36,-37,-38,-39,-86,-87,153,213,221,]),'SINO':([182,200,203,],[-66,215,-67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_funciones':([0,3,],[2,6,]),'funcion':([0,3,],[3,3,]),'params':([10,123,],[13,156,]),'lista_params':([10,43,87,123,],[14,85,125,14,]),'tipo':([10,43,87,123,],[15,15,15,15,]),'sentencias':([11,22,32,143,222,230,],[21,52,76,168,231,234,]),'sentencia':([11,22,32,143,222,230,],[22,22,22,22,22,22,]),'expresion':([11,20,22,29,32,40,54,55,62,63,64,65,66,67,68,73,74,79,80,89,101,102,103,129,134,143,144,145,147,171,173,174,175,184,193,194,197,218,222,230,],[25,46,25,72,25,84,90,93,94,95,96,97,98,99,100,106,106,121,122,126,130,131,132,93,165,25,106,106,172,188,189,190,191,106,208,93,212,227,25,25,]),'OP_ASIG':([24,113,206,],[54,147,218,]),'abrir_ambito':([32,44,109,133,141,181,213,215,217,221,],[75,86,143,164,166,199,222,224,226,230,]),'args':([55,194,],[91,209,]),'lista_args':([55,129,194,],[92,160,92,]),'condicion':([73,74,144,145,184,],[105,107,169,170,202,]),'bloque':([75,86,164,166,199,224,226,],[108,124,182,183,214,232,233,]),'for_init':([77,],[111,]),'empty':([77,187,],[117,207,]),'opciones':([78,],[118,]),'opcion':([78,118,],[119,152,]),'comparador':([106,],[134,]),'cerrar_ambito':([108,124,168,182,183,214,231,232,233,234,],[142,157,185,200,201,223,235,236,237,238,]),'llamada_accion':([153,],[176,]),'casos':([180,196,],[195,211,]),'caso':([180,196,],[196,196,]),'for_update':([187,],[205,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_funciones','programa',1,'p_programa','parser_module.py',33),
  ('lista_funciones -> funcion','lista_funciones',1,'p_lista_funciones','parser_module.py',37),
  ('lista_funciones -> funcion lista_funciones','lista_funciones',2,'p_lista_funciones','parser_module.py',38),
  ('funcion -> INICIO PARENIZQ PARENDER LLAVEIZQ sentencias LLAVEDER','funcion',6,'p_funcion','parser_module.py',45),
  ('funcion -> FUNCION IDENTIFICADOR PARENIZQ params PARENDER abrir_ambito bloque cerrar_ambito','funcion',8,'p_funcion','parser_module.py',46),
  ('sentencias -> sentencia','sentencias',1,'p_sentencias','parser_module.py',60),
  ('sentencias -> sentencia sentencias','sentencias',2,'p_sentencias','parser_module.py',61),
  ('sentencia -> NUMERO IDENTIFICADOR IGUAL expresion PUNTOYCOMA','sentencia',5,'p_sentencia_declaracion','parser_module.py',67),
  ('sentencia -> DECIMAL IDENTIFICADOR IGUAL expresion PUNTOYCOMA','sentencia',5,'p_sentencia_declaracion','parser_module.py',68),
  ('sentencia -> BOOLEANO IDENTIFICADOR IGUAL expresion PUNTOYCOMA','sentencia',5,'p_sentencia_declaracion','parser_module.py',69),
  ('sentencia -> CADENA IDENTIFICADOR IGUAL expresion PUNTOYCOMA','sentencia',5,'p_sentencia_declaracion','parser_module.py',70),
  ('sentencia -> IDENTIFICADOR OP_ASIG expresion PUNTOYCOMA','sentencia',4,'p_sentencia_asignacion','parser_module.py',80),
  ('OP_ASIG -> IGUAL','OP_ASIG',1,'p_OP_ASIG','parser_module.py',88),
  ('OP_ASIG -> SUMA_IGUAL','OP_ASIG',1,'p_OP_ASIG','parser_module.py',89),
  ('OP_ASIG -> RESTA_IGUAL','OP_ASIG',1,'p_OP_ASIG','parser_module.py',90),
  ('OP_ASIG -> MULT_IGUAL','OP_ASIG',1,'p_OP_ASIG','parser_module.py',91),
  ('OP_ASIG -> DIV_IGUAL','OP_ASIG',1,'p_OP_ASIG','parser_module.py',92),
  ('sentencia -> REGRESA expresion PUNTOYCOMA','sentencia',3,'p_sentencia_regresa','parser_module.py',97),
  ('sentencia -> SI PARENIZQ condicion PARENDER abrir_ambito bloque cerrar_ambito','sentencia',7,'p_sentencia_si','parser_module.py',104),
  ('sentencia -> SI PARENIZQ condicion PARENDER abrir_ambito bloque cerrar_ambito SINO abrir_ambito bloque cerrar_ambito','sentencia',11,'p_sentencia_si','parser_module.py',105),
  ('sentencia -> MIENTRAS PARENIZQ condicion PARENDER abrir_ambito bloque cerrar_ambito','sentencia',7,'p_sentencia_mientras','parser_module.py',116),
  ('sentencia -> REPETIR abrir_ambito bloque cerrar_ambito HASTA PARENIZQ condicion PARENDER PUNTOYCOMA','sentencia',9,'p_sentencia_hacer_mientras','parser_module.py',123),
  ('sentencia -> REPETIR sentencias HASTA PARENIZQ condicion PARENDER PUNTOYCOMA','sentencia',7,'p_sentencia_repetir','parser_module.py',129),
  ('for_init -> NUMERO IDENTIFICADOR IGUAL expresion','for_init',4,'p_for_init','parser_module.py',136),
  ('for_init -> DECIMAL IDENTIFICADOR IGUAL expresion','for_init',4,'p_for_init','parser_module.py',137),
  ('for_init -> BOOLEANO IDENTIFICADOR IGUAL expresion','for_init',4,'p_for_init','parser_module.py',138),
  ('for_init -> CADENA IDENTIFICADOR IGUAL expresion','for_init',4,'p_for_init','parser_module.py',139),
  ('for_init -> IDENTIFICADOR OP_ASIG expresion','for_init',3,'p_for_init','parser_module.py',140),
  ('for_init -> empty','for_init',1,'p_for_init','parser_module.py',141),
  ('for_update -> IDENTIFICADOR OP_ASIG expresion','for_update',3,'p_for_update','parser_module.py',159),
  ('for_update -> empty','for_update',1,'p_for_update','parser_module.py',160),
  ('empty -> <empty>','empty',0,'p_empty','parser_module.py',171),
  ('sentencia -> PARA PARENIZQ for_init PUNTOYCOMA condicion PUNTOYCOMA for_update PARENDER abrir_ambito bloque cerrar_ambito','sentencia',11,'p_sentencia_para','parser_module.py',175),
  ('sentencia -> expresion PUNTOYCOMA','sentencia',2,'p_sentencia_exprstmt','parser_module.py',183),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion','parser_module.py',196),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion','parser_module.py',197),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion','parser_module.py',198),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion','parser_module.py',199),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion','parser_module.py',200),
  ('expresion -> PARENIZQ expresion PARENDER','expresion',3,'p_expresion','parser_module.py',201),
  ('expresion -> NUMERO','expresion',1,'p_expresion','parser_module.py',202),
  ('expresion -> DECIMAL','expresion',1,'p_expresion','parser_module.py',203),
  ('expresion -> CADENA','expresion',1,'p_expresion','parser_module.py',204),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion','parser_module.py',205),
  ('comparador -> MENOR','comparador',1,'p_comparador','parser_module.py',223),
  ('comparador -> MAYOR','comparador',1,'p_comparador','parser_module.py',224),
  ('comparador -> MENOR_IGUAL','comparador',1,'p_comparador','parser_module.py',225),
  ('comparador -> MAYOR_IGUAL','comparador',1,'p_comparador','parser_module.py',226),
  ('comparador -> IGUAL_IGUAL','comparador',1,'p_comparador','parser_module.py',227),
  ('comparador -> DIFERENTE','comparador',1,'p_comparador','parser_module.py',228),
  ('condicion -> expresion comparador expresion','condicion',3,'p_condicion','parser_module.py',233),
  ('condicion -> expresion','condicion',1,'p_condicion','parser_module.py',234),
  ('sentencia -> MENU LLAVEIZQ opciones LLAVEDER','sentencia',4,'p_sentencia_menu','parser_module.py',244),
  ('opciones -> opcion','opciones',1,'p_opciones','parser_module.py',250),
  ('opciones -> opciones opcion','opciones',2,'p_opciones','parser_module.py',251),
  ('opcion -> NUMERO DOSPUNTOS llamada_accion PUNTOYCOMA','opcion',4,'p_opcion','parser_module.py',258),
  ('llamada_accion -> MOSTRAR PARENIZQ expresion PARENDER PUNTOYCOMA','llamada_accion',5,'p_llamada_accion','parser_module.py',264),
  ('llamada_accion -> IDENTIFICADOR PARENIZQ args PARENDER PUNTOYCOMA','llamada_accion',5,'p_llamada_accion','parser_module.py',265),
  ('sentencia -> MOSTRAR PARENIZQ expresion PARENDER PUNTOYCOMA','sentencia',5,'p_sentencia_mostrar','parser_module.py',280),
  ('sentencia -> CAMBIAR PARENIZQ expresion PARENDER LLAVEIZQ casos LLAVEDER','sentencia',7,'p_sentencia_switch','parser_module.py',289),
  ('casos -> caso','casos',1,'p_casos','parser_module.py',295),
  ('casos -> caso casos','casos',2,'p_casos','parser_module.py',296),
  ('caso -> CASO expresion DOSPUNTOS abrir_ambito sentencias cerrar_ambito','caso',6,'p_caso','parser_module.py',299),
  ('caso -> PREDETERMINADO DOSPUNTOS abrir_ambito sentencias cerrar_ambito','caso',5,'p_caso','parser_module.py',300),
  ('abrir_ambito -> <empty>','abrir_ambito',0,'p_abrir_ambito','parser_module.py',310),
  ('cerrar_ambito -> <empty>','cerrar_ambito',0,'p_cerrar_ambito','parser_module.py',314),
  ('bloque -> LLAVEIZQ abrir_ambito sentencias cerrar_ambito LLAVEDER','bloque',5,'p_bloque','parser_module.py',318),
  ('sentencia -> FUNCION IDENTIFICADOR PARENIZQ params PARENDER abrir_ambito bloque cerrar_ambito','sentencia',8,'p_sentencia_funcion_declaracion','parser_module.py',325),
  ('params -> <empty>','params',0,'p_params','parser_module.py',337),
  ('params -> lista_params','params',1,'p_params','parser_module.py',338),
  ('lista_params -> tipo IDENTIFICADOR','lista_params',2,'p_lista_params','parser_module.py',342),
  ('lista_params -> IDENTIFICADOR','lista_params',1,'p_lista_params','parser_module.py',343),
  ('lista_params -> tipo IDENTIFICADOR COMA lista_params','lista_params',4,'p_lista_params','parser_module.py',344),
  ('lista_params -> IDENTIFICADOR COMA lista_params','lista_params',3,'p_lista_params','parser_module.py',345),
  ('tipo -> NUMERO','tipo',1,'p_tipo','parser_module.py',370),
  ('tipo -> DECIMAL','tipo',1,'p_tipo','parser_module.py',371),
  ('tipo -> BOOLEANO','tipo',1,'p_tipo','parser_module.py',372),
  ('tipo -> CADENA','tipo',1,'p_tipo','parser_module.py',373),
  ('sentencia -> IDENTIFICADOR PARENIZQ args PARENDER PUNTOYCOMA','sentencia',5,'p_sentencia_llamada_funcion','parser_module.py',377),
  ('args -> <empty>','args',0,'p_args','parser_module.py',383),
  ('args -> lista_args','args',1,'p_args','parser_module.py',384),
  ('lista_args -> expresion','lista_args',1,'p_lista_args','parser_module.py',391),
  ('lista_args -> expresion COMA lista_args','lista_args',3,'p_lista_args','parser_module.py',392),
  ('sentencia -> BREAK PUNTOYCOMA','sentencia',2,'p_sentencia_break','parser_module.py',402),
  ('sentencia -> CONTINUE PUNTOYCOMA','sentencia',2,'p_sentencia_continue','parser_module.py',408),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','parser_module.py',417),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','parser_module.py',418),
  ('expresion -> NEGACION expresion','expresion',2,'p_expresion_logica','parser_module.py',419),
  ('expresion -> VERDADERO','expresion',1,'p_booleano','parser_module.py',429),
  ('expresion -> FALSO','expresion',1,'p_booleano','parser_module.py',430),
]
